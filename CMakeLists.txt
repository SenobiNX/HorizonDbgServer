cmake_minimum_required(VERSION 3.16)

set(CMAKE_TOOLCHAIN_FILE "${CMAKE_SOURCE_DIR}/sys/cmake/toolchain.cmake")
project(HorizonDbg VERSION 1.0 LANGUAGES ASM C CXX)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

include(config/config.cmake)

file(GLOB_RECURSE SOURCES_ASM ${PROJECT_SOURCE_DIR}/src/*.S)
file(GLOB_RECURSE SOURCES_C ${PROJECT_SOURCE_DIR}/src/*.c)
file(GLOB_RECURSE SOURCES_CXX ${PROJECT_SOURCE_DIR}/src/*.cpp)
set(SOURCES ${SOURCES_ASM} ${SOURCES_C} ${SOURCES_CXX})
add_executable(${PROJECT_NAME} ${SOURCES})
include_directories(include/sead)
include_directories(include/al)
include_directories(include/game)
include_directories(lib/imgui)

set(RUST_STATIC_LIB_LOCATION ${PROJECT_SOURCE_DIR}/target/aarch64-nintendo-switch-freestanding/debug/libhorizon_dbg_interop.a)
list(JOIN DEFAULTDEFINES " " DD)
set(CargoCXXFLAGS "${CMAKE_CXX_FLAGS} ${DD}")
add_custom_target(Cargo COMMAND ${CMAKE_COMMAND} -E env "CXXFLAGS=${CargoCXXFLAGS}" cargo build)
add_library(RustLib STATIC IMPORTED)
set_target_properties(RustLib PROPERTIES IMPORTED_LOCATION ${RUST_STATIC_LIB_LOCATION})
add_dependencies(${PROJECT_NAME} Cargo)
target_link_libraries(${PROJECT_NAME} LINK_PUBLIC RustLib)

include(sys/cmake/module.cmake)
include(sys/cmake/deploy.cmake)
include(sys/cmake/sail.cmake)
usesail(${PROJECT_NAME})
